import fs from 'fs';
import glob from 'glob';

const TARGET = './src/index.ts';

const files = glob.sync('**/*.glsl');
const modules = {};

const nameify = (s) => '_' + s.toString().replace(/[^A-Za-z0-9]+/g, '');

const keys = [];
const names = [];
for (const file of files) {
  const path = file.split('/');

  const id = path.pop().replace(/\.glsl$/, '');
  const tokens = [...path, id];
	
	const name = nameify(tokens.join(''));
	const key = tokens.join('/');

	keys.push(key);
	names.push(name);
}

const imports = files.map((file, i) => `import ${names[i]} from ${JSON.stringify('./' + file)};`);
const map = files.map((file, i) => ` ${JSON.stringify(keys[i])}: ${names[i]},`);

const ts = `// File generated by build.mjs. Do not edit directly.
${imports.join("\n")}
const Modules = {
${map.join("\n")}
} as Record<string, string>;
export default Modules;
`;
fs.writeFileSync(TARGET, ts);

