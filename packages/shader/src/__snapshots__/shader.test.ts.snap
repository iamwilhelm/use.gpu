// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`shader extracts quad fragment declarations 1`] = `
Array [
  Object {
    "node": "[Declaration]",
    "symbols": Array [
      Object {
        "name": "fragColor",
        "node": "[SingleDeclaration]",
      },
    ],
    "variable": Object {
      "locals": Array [
        Object {
          "expr": null,
          "name": "fragColor",
          "node": "[SingleDeclaration]",
        },
      ],
      "node": "[VariableDeclaration]",
      "type": Object {
        "name": "vec4",
        "node": "[QualifiedType]",
        "qualifiers": Array [
          "layout(location = 0)",
          "in",
        ],
      },
    },
  },
  Object {
    "node": "[Declaration]",
    "symbols": Array [
      Object {
        "name": "fragUV",
        "node": "[SingleDeclaration]",
      },
    ],
    "variable": Object {
      "locals": Array [
        Object {
          "expr": null,
          "name": "fragUV",
          "node": "[SingleDeclaration]",
        },
      ],
      "node": "[VariableDeclaration]",
      "type": Object {
        "name": "vec2",
        "node": "[QualifiedType]",
        "qualifiers": Array [
          "layout(location = 1)",
          "in",
        ],
      },
    },
  },
  Object {
    "node": "[Declaration]",
    "symbols": Array [
      Object {
        "name": "outColor",
        "node": "[SingleDeclaration]",
      },
    ],
    "variable": Object {
      "locals": Array [
        Object {
          "expr": null,
          "name": "outColor",
          "node": "[SingleDeclaration]",
        },
      ],
      "node": "[VariableDeclaration]",
      "type": Object {
        "name": "vec4",
        "node": "[QualifiedType]",
        "qualifiers": Array [
          "layout(location = 0)",
          "out",
        ],
      },
    },
  },
]
`;

exports[`shader extracts quad vertex declarations 1`] = `
Array [
  Object {
    "node": "[Declaration]",
    "symbols": Array [
      Object {
        "name": "fragColor",
        "node": "[SingleDeclaration]",
      },
    ],
    "variable": Object {
      "locals": Array [
        Object {
          "expr": null,
          "name": "fragColor",
          "node": "[SingleDeclaration]",
        },
      ],
      "node": "[VariableDeclaration]",
      "type": Object {
        "name": "vec4",
        "node": "[QualifiedType]",
        "qualifiers": Array [
          "layout(location = 0)",
          "out",
        ],
      },
    },
  },
  Object {
    "node": "[Declaration]",
    "symbols": Array [
      Object {
        "name": "fragUV",
        "node": "[SingleDeclaration]",
      },
    ],
    "variable": Object {
      "locals": Array [
        Object {
          "expr": null,
          "name": "fragUV",
          "node": "[SingleDeclaration]",
        },
      ],
      "node": "[VariableDeclaration]",
      "type": Object {
        "name": "vec2",
        "node": "[QualifiedType]",
        "qualifiers": Array [
          "layout(location = 1)",
          "out",
        ],
      },
    },
  },
]
`;

exports[`shader extracts quad vertex functions 1`] = `
Array [
  Object {
    "node": "[FunctionDefinition]",
    "prototype": Object {
      "name": "main",
      "node": "[FunctionPrototype]",
      "parameters": Array [],
      "type": Object {
        "name": "void",
        "node": "[QualifiedType]",
        "qualifiers": Array [],
      },
    },
    "symbols": Array [
      Object {
        "name": "main",
        "node": "[FunctionDefinition]",
      },
    ],
  },
]
`;

exports[`shader extracts quad vertex imports 1`] = `
Array [
  Object {
    "imports": Array [
      Object {
        "imported": "MeshVertex",
        "name": "MeshVertex",
        "node": "[ImportDeclaration]",
      },
    ],
    "name": "use/types",
    "symbols": Array [
      Object {
        "name": "MeshVertex",
        "node": "[ImportDeclaration]",
      },
    ],
  },
  Object {
    "imports": Array [
      Object {
        "imported": "viewUniforms",
        "name": "viewUniforms",
        "node": "[ImportDeclaration]",
      },
      Object {
        "imported": "worldToClip",
        "name": "worldToClip",
        "node": "[ImportDeclaration]",
      },
    ],
    "name": "use/view",
    "symbols": Array [
      Object {
        "name": "viewUniforms",
        "node": "[ImportDeclaration]",
      },
      Object {
        "name": "worldToClip",
        "node": "[ImportDeclaration]",
      },
    ],
  },
  Object {
    "imports": Array [
      Object {
        "imported": "getQuadUV",
        "name": "getQuadUV",
        "node": "[ImportDeclaration]",
      },
    ],
    "name": "geometry/quad",
    "symbols": Array [
      Object {
        "name": "getQuadUV",
        "node": "[ImportDeclaration]",
      },
    ],
  },
]
`;

exports[`shader extracts test declarations 1`] = `
Array [
  Object {
    "node": "[Declaration]",
    "symbols": Array [
      Object {
        "name": "x",
        "node": "[SingleDeclaration]",
      },
      Object {
        "name": "y",
        "node": "[SingleDeclaration]",
      },
    ],
    "variable": Object {
      "locals": Array [
        Object {
          "expr": null,
          "name": "x",
          "node": "[SingleDeclaration]",
        },
        Object {
          "expr": null,
          "name": "y",
          "node": "[SingleDeclaration]",
        },
      ],
      "node": "[VariableDeclaration]",
      "type": Object {
        "name": "float",
        "node": "[QualifiedType]",
        "qualifiers": Array [],
      },
    },
  },
  Object {
    "node": "[Declaration]",
    "symbols": Array [
      Object {
        "name": "a",
        "node": "[SingleDeclaration]",
      },
      Object {
        "name": "b",
        "node": "[SingleDeclaration]",
      },
      Object {
        "name": "c",
        "node": "[SingleDeclaration]",
      },
      Object {
        "name": "d",
        "node": "[SingleDeclaration]",
      },
    ],
    "variable": Object {
      "locals": Array [
        Object {
          "expr": "3",
          "name": "a",
          "node": "[SingleDeclaration]",
        },
        Object {
          "expr": "1",
          "name": "b",
          "node": "[SingleDeclaration]",
        },
        Object {
          "expr": null,
          "name": "c",
          "node": "[SingleDeclaration]",
        },
        Object {
          "expr": null,
          "name": "d",
          "node": "[SingleDeclaration]",
        },
      ],
      "node": "[VariableDeclaration]",
      "type": Object {
        "name": "int",
        "node": "[QualifiedType]",
        "qualifiers": Array [],
      },
    },
  },
]
`;

exports[`shader extracts use view declarations 1`] = `
Array [
  Object {
    "node": "[Declaration]",
    "struct": Object {
      "name": "viewUniforms",
      "node": "[QualifiedStructDeclaration]",
      "struct": Object {
        "members": Array [
          Object {
            "name": "projectionMatrix",
            "node": "[StructDeclaration]",
            "type": Object {
              "name": "mat4",
              "node": "[mat4]",
              "qualifiers": Array [],
            },
          },
          Object {
            "name": "viewMatrix",
            "node": "[StructDeclaration]",
            "type": Object {
              "name": "mat4",
              "node": "[mat4]",
              "qualifiers": Array [],
            },
          },
          Object {
            "name": "viewPosition",
            "node": "[StructDeclaration]",
            "type": Object {
              "name": "vec4",
              "node": "[vec4]",
              "qualifiers": Array [],
            },
          },
          Object {
            "name": "viewResolution",
            "node": "[StructDeclaration]",
            "type": Object {
              "name": "vec2",
              "node": "[vec2]",
              "qualifiers": Array [],
            },
          },
        ],
        "node": "[StructDeclarationList]",
      },
      "type": Object {
        "name": "ViewUniforms",
        "node": "[QualifiedStructDeclaration]",
        "qualifiers": Array [
          "layout(set = 0, binding = 0)",
          "uniform",
        ],
      },
    },
    "symbols": Array [
      Object {
        "name": "viewUniforms",
        "node": "[Declaration]",
      },
    ],
  },
]
`;
