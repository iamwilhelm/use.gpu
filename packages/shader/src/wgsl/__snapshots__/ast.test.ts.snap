// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ast filters out noisy comments 1`] = `
[
  {
    "at": 48,
    "flags": 0,
    "struct": {
      "attr": undefined,
      "members": [
        {
          "attr": undefined,
          "name": "bar",
          "type": "u32",
        },
      ],
      "name": "Foo",
    },
    "symbol": "Foo",
  },
  {
    "at": 116,
    "flags": 2,
    "symbol": "x",
    "variable": {
      "attr": [
        "link",
      ],
      "identifiers": undefined,
      "name": "x",
      "qual": undefined,
      "type": "f32",
      "value": undefined,
    },
  },
  {
    "at": 150,
    "flags": 2,
    "symbol": "y",
    "variable": {
      "attr": [
        "link",
      ],
      "identifiers": undefined,
      "name": "y",
      "qual": undefined,
      "type": "f32",
      "value": undefined,
    },
  },
  {
    "at": 177,
    "flags": 0,
    "func": {
      "attr": undefined,
      "identifiers": undefined,
      "inferred": undefined,
      "name": "getValue",
      "parameters": [
        {
          "attr": undefined,
          "name": "index",
          "type": "i32",
        },
      ],
      "type": "f32",
    },
    "symbol": "getValue",
  },
  {
    "at": 226,
    "flags": 1,
    "func": {
      "attr": undefined,
      "identifiers": [
        "x",
        "y",
        "getValue",
        "v",
      ],
      "inferred": undefined,
      "name": "main",
      "parameters": undefined,
      "type": "vec3<f32>",
    },
    "symbol": "main",
  },
]
`;

exports[`ast gets geometry quad symbol table 1`] = `
{
  "bindings": undefined,
  "declarations": [
    {
      "at": 0,
      "constant": {
        "attr": undefined,
        "identifiers": undefined,
        "name": "QUAD",
        "type": "array<vec2<i32>, 4>",
        "value": "array<vec2<i32>, 4>(
  vec2<i32>(0, 0),
  vec2<i32>(1, 0),
  vec2<i32>(0, 1),
  vec2<i32>(1, 1),
)",
      },
      "flags": 0,
      "symbol": "QUAD",
    },
    {
      "at": 137,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "QUAD",
        ],
        "inferred": undefined,
        "name": "getQuadIndex",
        "parameters": [
          {
            "attr": undefined,
            "name": "vertex",
            "type": "i32",
          },
        ],
        "type": "vec2<i32>",
      },
      "symbol": "getQuadIndex",
    },
    {
      "at": 215,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "getQuadIndex",
        ],
        "inferred": undefined,
        "name": "getQuadUV",
        "parameters": [
          {
            "attr": undefined,
            "name": "vertex",
            "type": "i32",
          },
        ],
        "type": "vec2<f32>",
      },
      "symbol": "getQuadUV",
    },
  ],
  "enables": undefined,
  "exports": [
    {
      "at": 137,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "QUAD",
        ],
        "inferred": undefined,
        "name": "getQuadIndex",
        "parameters": [
          {
            "attr": undefined,
            "name": "vertex",
            "type": "i32",
          },
        ],
        "type": "vec2<i32>",
      },
      "symbol": "getQuadIndex",
    },
    {
      "at": 215,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "getQuadIndex",
        ],
        "inferred": undefined,
        "name": "getQuadUV",
        "parameters": [
          {
            "attr": undefined,
            "name": "vertex",
            "type": "i32",
          },
        ],
        "type": "vec2<f32>",
      },
      "symbol": "getQuadUV",
    },
  ],
  "externals": undefined,
  "globals": undefined,
  "linkable": undefined,
  "modules": undefined,
  "symbols": [
    "QUAD",
    "getQuadIndex",
    "getQuadUV",
  ],
  "types": undefined,
  "visibles": [
    "getQuadIndex",
    "getQuadUV",
  ],
}
`;

exports[`ast gets inferred type from function declaration 1`] = `
[
  {
    "alias": {
      "attr": [
        "infer",
      ],
      "name": "T",
      "type": "T",
    },
    "at": 7,
    "flags": 16,
    "symbol": "T",
  },
  {
    "at": 28,
    "flags": 3,
    "func": {
      "attr": [
        "link",
      ],
      "identifiers": [
        "T",
      ],
      "inferred": [
        {
          "at": -1,
          "name": "T",
        },
      ],
      "name": "main",
      "parameters": undefined,
      "type": {
        "attr": [
          "infer(T)",
        ],
        "name": "T",
      },
    },
    "symbol": "main",
  },
]
`;

exports[`ast gets linked var/const declarations 1`] = `
[
  {
    "at": 7,
    "flags": 2,
    "symbol": "x",
    "variable": {
      "attr": [
        "link",
      ],
      "identifiers": undefined,
      "name": "x",
      "qual": undefined,
      "type": "f32",
      "value": undefined,
    },
  },
  {
    "at": 31,
    "flags": 2,
    "symbol": "y",
    "variable": {
      "attr": [
        "link",
      ],
      "identifiers": undefined,
      "name": "y",
      "qual": undefined,
      "type": "f32",
      "value": undefined,
    },
  },
  {
    "at": 55,
    "constant": {
      "attr": [
        "link",
      ],
      "identifiers": undefined,
      "name": "a",
      "type": "i32",
      "value": "3",
    },
    "flags": 2,
    "symbol": "a",
  },
]
`;

exports[`ast gets quad vertex declarations 1`] = `
[
  {
    "at": 182,
    "flags": 2,
    "func": {
      "attr": [
        "link",
      ],
      "identifiers": undefined,
      "inferred": undefined,
      "name": "getPosition",
      "parameters": [
        {
          "attr": undefined,
          "name": "i",
          "type": "i32",
        },
      ],
      "type": "vec4<f32>",
    },
    "symbol": "getPosition",
  },
  {
    "at": 228,
    "flags": 2,
    "func": {
      "attr": [
        "link",
      ],
      "identifiers": undefined,
      "inferred": undefined,
      "name": "getColor",
      "parameters": [
        {
          "attr": undefined,
          "name": "i",
          "type": "i32",
        },
      ],
      "type": "vec4<f32>",
    },
    "symbol": "getColor",
  },
  {
    "at": 271,
    "flags": 2,
    "func": {
      "attr": [
        "link",
      ],
      "identifiers": undefined,
      "inferred": undefined,
      "name": "getSize",
      "parameters": [
        {
          "attr": undefined,
          "name": "i",
          "type": "i32",
        },
      ],
      "type": "vec2<f32>",
    },
    "symbol": "getSize",
  },
  {
    "at": 313,
    "flags": 2,
    "func": {
      "attr": [
        "link",
      ],
      "identifiers": undefined,
      "inferred": undefined,
      "name": "getDepth",
      "parameters": [
        {
          "attr": undefined,
          "name": "i",
          "type": "i32",
        },
      ],
      "type": "f32",
    },
    "symbol": "getDepth",
  },
  {
    "at": 351,
    "flags": 1,
    "func": {
      "attr": [
        "export",
      ],
      "identifiers": [
        "SolidVertex",
        "position",
        "getPosition",
        "color",
        "getColor",
        "size",
        "getSize",
        "depth",
        "getDepth",
        "center",
        "worldToClip",
        "uv",
        "getQuadUV",
        "xy",
        "pixelScale",
        "getPerspectiveScale",
        "HAS_EDGE_BLEED",
        "viewUniforms",
        "SolidVertex",
      ],
      "inferred": undefined,
      "name": "getQuadVertex",
      "parameters": [
        {
          "attr": undefined,
          "name": "vertexIndex",
          "type": "i32",
        },
        {
          "attr": undefined,
          "name": "instanceIndex",
          "type": "i32",
        },
      ],
      "type": "SolidVertex",
    },
    "symbol": "getQuadVertex",
  },
]
`;

exports[`ast gets quad vertex imports 1`] = `
[
  {
    "at": 0,
    "imports": [
      {
        "imported": "SolidVertex",
        "name": "SolidVertex",
      },
    ],
    "name": "@use-gpu/wgsl/use/types",
    "symbols": [
      "SolidVertex",
    ],
  },
  {
    "at": 0,
    "imports": [
      {
        "imported": "viewUniforms",
        "name": "viewUniforms",
      },
      {
        "imported": "worldToClip",
        "name": "worldToClip",
      },
      {
        "imported": "getPerspectiveScale",
        "name": "getPerspectiveScale",
      },
    ],
    "name": "@use-gpu/wgsl/use/view",
    "symbols": [
      "viewUniforms",
      "worldToClip",
      "getPerspectiveScale",
    ],
  },
  {
    "at": 0,
    "imports": [
      {
        "imported": "getQuadUV",
        "name": "getQuadUV",
      },
    ],
    "name": "@use-gpu/wgsl/geometry/quad",
    "symbols": [
      "getQuadUV",
    ],
  },
]
`;

exports[`ast gets quad vertex symbol table 1`] = `
{
  "bindings": undefined,
  "declarations": [
    {
      "at": 182,
      "flags": 2,
      "func": {
        "attr": [
          "link",
        ],
        "identifiers": undefined,
        "inferred": undefined,
        "name": "getPosition",
        "parameters": [
          {
            "attr": undefined,
            "name": "i",
            "type": "i32",
          },
        ],
        "type": "vec4<f32>",
      },
      "symbol": "getPosition",
    },
    {
      "at": 228,
      "flags": 2,
      "func": {
        "attr": [
          "link",
        ],
        "identifiers": undefined,
        "inferred": undefined,
        "name": "getColor",
        "parameters": [
          {
            "attr": undefined,
            "name": "i",
            "type": "i32",
          },
        ],
        "type": "vec4<f32>",
      },
      "symbol": "getColor",
    },
    {
      "at": 271,
      "flags": 2,
      "func": {
        "attr": [
          "link",
        ],
        "identifiers": undefined,
        "inferred": undefined,
        "name": "getSize",
        "parameters": [
          {
            "attr": undefined,
            "name": "i",
            "type": "i32",
          },
        ],
        "type": "vec2<f32>",
      },
      "symbol": "getSize",
    },
    {
      "at": 313,
      "flags": 2,
      "func": {
        "attr": [
          "link",
        ],
        "identifiers": undefined,
        "inferred": undefined,
        "name": "getDepth",
        "parameters": [
          {
            "attr": undefined,
            "name": "i",
            "type": "i32",
          },
        ],
        "type": "f32",
      },
      "symbol": "getDepth",
    },
    {
      "at": 351,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "getPosition",
          "getColor",
          "getSize",
          "getDepth",
        ],
        "inferred": undefined,
        "name": "getQuadVertex",
        "parameters": [
          {
            "attr": undefined,
            "name": "vertexIndex",
            "type": "i32",
          },
          {
            "attr": undefined,
            "name": "instanceIndex",
            "type": "i32",
          },
        ],
        "type": "SolidVertex",
      },
      "symbol": "getQuadVertex",
    },
  ],
  "enables": undefined,
  "exports": [
    {
      "at": 351,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "getPosition",
          "getColor",
          "getSize",
          "getDepth",
        ],
        "inferred": undefined,
        "name": "getQuadVertex",
        "parameters": [
          {
            "attr": undefined,
            "name": "vertexIndex",
            "type": "i32",
          },
          {
            "attr": undefined,
            "name": "instanceIndex",
            "type": "i32",
          },
        ],
        "type": "SolidVertex",
      },
      "symbol": "getQuadVertex",
    },
  ],
  "externals": [
    {
      "at": 182,
      "flags": 2,
      "func": {
        "attr": [
          "link",
        ],
        "identifiers": undefined,
        "inferred": undefined,
        "name": "getPosition",
        "parameters": [
          {
            "attr": undefined,
            "name": "i",
            "type": "i32",
          },
        ],
        "type": "vec4<f32>",
      },
      "symbol": "getPosition",
    },
    {
      "at": 228,
      "flags": 2,
      "func": {
        "attr": [
          "link",
        ],
        "identifiers": undefined,
        "inferred": undefined,
        "name": "getColor",
        "parameters": [
          {
            "attr": undefined,
            "name": "i",
            "type": "i32",
          },
        ],
        "type": "vec4<f32>",
      },
      "symbol": "getColor",
    },
    {
      "at": 271,
      "flags": 2,
      "func": {
        "attr": [
          "link",
        ],
        "identifiers": undefined,
        "inferred": undefined,
        "name": "getSize",
        "parameters": [
          {
            "attr": undefined,
            "name": "i",
            "type": "i32",
          },
        ],
        "type": "vec2<f32>",
      },
      "symbol": "getSize",
    },
    {
      "at": 313,
      "flags": 2,
      "func": {
        "attr": [
          "link",
        ],
        "identifiers": undefined,
        "inferred": undefined,
        "name": "getDepth",
        "parameters": [
          {
            "attr": undefined,
            "name": "i",
            "type": "i32",
          },
        ],
        "type": "f32",
      },
      "symbol": "getDepth",
    },
  ],
  "globals": undefined,
  "linkable": {
    "getColor": true,
    "getDepth": true,
    "getPosition": true,
    "getSize": true,
  },
  "modules": [
    {
      "at": 0,
      "imports": [
        {
          "imported": "SolidVertex",
          "name": "SolidVertex",
        },
      ],
      "name": "@use-gpu/wgsl/use/types",
      "symbols": [
        "SolidVertex",
      ],
    },
    {
      "at": 0,
      "imports": [
        {
          "imported": "viewUniforms",
          "name": "viewUniforms",
        },
        {
          "imported": "worldToClip",
          "name": "worldToClip",
        },
        {
          "imported": "getPerspectiveScale",
          "name": "getPerspectiveScale",
        },
      ],
      "name": "@use-gpu/wgsl/use/view",
      "symbols": [
        "viewUniforms",
        "worldToClip",
        "getPerspectiveScale",
      ],
    },
    {
      "at": 0,
      "imports": [
        {
          "imported": "getQuadUV",
          "name": "getQuadUV",
        },
      ],
      "name": "@use-gpu/wgsl/geometry/quad",
      "symbols": [
        "getQuadUV",
      ],
    },
  ],
  "symbols": [
    "getPosition",
    "getColor",
    "getSize",
    "getDepth",
    "getQuadVertex",
  ],
  "types": undefined,
  "visibles": [
    "getQuadVertex",
  ],
}
`;

exports[`ast gets shake information for geometry/quad AST 1`] = `
[
  [
    0,
    [
      0,
      1,
      2,
    ],
  ],
  [
    137,
    [
      1,
      2,
    ],
  ],
  [
    215,
    [
      2,
    ],
  ],
]
`;

exports[`ast gets shake information for getQuadVertex AST 1`] = `
[
  [
    182,
    [
      0,
      4,
    ],
  ],
  [
    228,
    [
      1,
      4,
    ],
  ],
  [
    271,
    [
      2,
      4,
    ],
  ],
  [
    313,
    [
      3,
      4,
    ],
  ],
  [
    351,
    [
      4,
    ],
  ],
]
`;

exports[`ast gets shake information for use/types AST 1`] = `
[
  [
    1,
    [
      0,
    ],
  ],
  [
    94,
    [
      1,
    ],
  ],
]
`;

exports[`ast gets shake table 1`] = `
[
  [
    7,
    [
      0,
      3,
      4,
    ],
  ],
  [
    26,
    [
      1,
      3,
      4,
    ],
  ],
  [
    52,
    [
      2,
      4,
    ],
  ],
  [
    100,
    [
      3,
      4,
    ],
  ],
  [
    163,
    [
      4,
    ],
  ],
]
`;

exports[`ast gets solid fragment declarations 1`] = `
[
  {
    "at": 1,
    "flags": 2,
    "func": {
      "attr": [
        "link",
      ],
      "identifiers": undefined,
      "inferred": undefined,
      "name": "getFragment",
      "parameters": [
        {
          "attr": undefined,
          "name": "color",
          "type": "vec4<f32>",
        },
        {
          "attr": undefined,
          "name": "uv",
          "type": "vec2<f32>",
        },
      ],
      "type": "vec4<f32>",
    },
    "symbol": "getFragment",
  },
  {
    "at": 73,
    "flags": 1,
    "func": {
      "attr": [
        "fragment",
      ],
      "identifiers": [
        "outColor",
        "getFragment",
      ],
      "inferred": undefined,
      "name": "main",
      "parameters": [
        {
          "attr": [
            "location(0)",
          ],
          "name": "fragColor",
          "type": "vec4<f32>",
        },
        {
          "attr": [
            "location(1)",
          ],
          "name": "fragUV",
          "type": "vec2<f32>",
        },
      ],
      "type": {
        "attr": [
          "location(0)",
        ],
        "name": "vec4<f32>",
      },
    },
    "symbol": "main",
  },
]
`;

exports[`ast gets symbol table 1`] = `
{
  "bindings": undefined,
  "declarations": [
    {
      "at": 7,
      "flags": 1,
      "symbol": "x",
      "variable": {
        "attr": [
          "export",
        ],
        "identifiers": undefined,
        "name": "x",
        "qual": undefined,
        "type": "f32",
        "value": undefined,
      },
    },
    {
      "at": 26,
      "flags": 0,
      "symbol": "y",
      "variable": {
        "attr": undefined,
        "identifiers": undefined,
        "name": "y",
        "qual": undefined,
        "type": "f32",
        "value": undefined,
      },
    },
    {
      "at": 44,
      "constant": {
        "attr": undefined,
        "identifiers": undefined,
        "name": "a",
        "type": "i32",
        "value": "3",
      },
      "flags": 0,
      "symbol": "a",
    },
    {
      "alias": {
        "attr": undefined,
        "name": "integer",
        "type": "i32",
      },
      "at": 68,
      "flags": 0,
      "symbol": "integer",
    },
    {
      "at": 94,
      "constant": {
        "attr": undefined,
        "identifiers": undefined,
        "name": "b",
        "type": "i32",
        "value": undefined,
      },
      "flags": 0,
      "symbol": "b",
    },
    {
      "at": 125,
      "flags": 1,
      "struct": {
        "attr": [
          "export",
        ],
        "members": [
          {
            "attr": undefined,
            "name": "intensity",
            "type": "f32",
          },
          {
            "attr": [
              "annotate",
            ],
            "name": "position",
            "type": "vec3<f32>",
          },
        ],
        "name": "light",
      },
      "symbol": "light",
    },
    {
      "at": 218,
      "constant": {
        "attr": undefined,
        "identifiers": undefined,
        "name": "QUAD",
        "type": "array<vec2<i32>, 4>",
        "value": "array<vec2<i32>, 4>(
        vec2<i32>(0, 0),
        vec2<i32>(1, 0),
        vec2<i32>(0, 1),
        vec2<i32>(1, 1),
      )",
      },
      "flags": 0,
      "symbol": "QUAD",
    },
    {
      "at": 397,
      "flags": 6,
      "func": {
        "attr": [
          "optional",
          "link",
        ],
        "identifiers": undefined,
        "inferred": undefined,
        "name": "getInt",
        "parameters": undefined,
        "type": "i32",
      },
      "symbol": "getInt",
    },
    {
      "at": 442,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": undefined,
        "inferred": undefined,
        "name": "main",
        "parameters": undefined,
        "type": "void",
      },
      "symbol": "main",
    },
  ],
  "enables": undefined,
  "exports": [
    {
      "at": 7,
      "flags": 1,
      "symbol": "x",
      "variable": {
        "attr": [
          "export",
        ],
        "identifiers": undefined,
        "name": "x",
        "qual": undefined,
        "type": "f32",
        "value": undefined,
      },
    },
    {
      "at": 125,
      "flags": 1,
      "struct": {
        "attr": [
          "export",
        ],
        "members": [
          {
            "attr": undefined,
            "name": "intensity",
            "type": "f32",
          },
          {
            "attr": [
              "annotate",
            ],
            "name": "position",
            "type": "vec3<f32>",
          },
        ],
        "name": "light",
      },
      "symbol": "light",
    },
    {
      "at": 442,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": undefined,
        "inferred": undefined,
        "name": "main",
        "parameters": undefined,
        "type": "void",
      },
      "symbol": "main",
    },
  ],
  "externals": [
    {
      "at": 397,
      "flags": 6,
      "func": {
        "attr": [
          "optional",
          "link",
        ],
        "identifiers": undefined,
        "inferred": undefined,
        "name": "getInt",
        "parameters": undefined,
        "type": "i32",
      },
      "symbol": "getInt",
    },
  ],
  "globals": undefined,
  "linkable": {
    "getInt": true,
  },
  "modules": undefined,
  "symbols": [
    "x",
    "y",
    "a",
    "integer",
    "b",
    "light",
    "QUAD",
    "getInt",
    "main",
  ],
  "types": [
    "light",
  ],
  "visibles": [
    "x",
    "light",
    "main",
  ],
}
`;

exports[`ast gets test declarations with array 1`] = `
[
  {
    "at": 0,
    "constant": {
      "attr": undefined,
      "identifiers": undefined,
      "name": "QUAD",
      "type": "array<vec2<i32>, 4>",
      "value": "array<vec2<i32>, 4>(
        vec2<i32>(0, 0),
        vec2<i32>(1, 0),
        vec2<i32>(0, 1),
        vec2<i32>(1, 1),
      )",
    },
    "flags": 0,
    "symbol": "QUAD",
  },
]
`;

exports[`ast gets test empty function declaration 1`] = `
[
  {
    "at": 7,
    "flags": 1,
    "func": {
      "attr": [
        "export",
      ],
      "identifiers": undefined,
      "inferred": undefined,
      "name": "main",
      "parameters": undefined,
      "type": "void",
    },
    "symbol": "main",
  },
]
`;

exports[`ast gets test enables 1`] = `
[
  "f16",
  "f64",
]
`;

exports[`ast gets test function declaration 1`] = `
[
  {
    "at": 7,
    "flags": 0,
    "func": {
      "attr": [
        "fragment",
      ],
      "identifiers": [
        "A",
        "foo",
      ],
      "inferred": undefined,
      "name": "fragShader",
      "parameters": [
        {
          "attr": undefined,
          "name": "in1",
          "type": "A",
        },
        {
          "attr": [
            "location(2)",
          ],
          "name": "in2",
          "type": "f32",
        },
      ],
      "type": {
        "attr": [
          "location(0)",
        ],
        "name": "vec4<f32>",
      },
    },
    "symbol": "fragShader",
  },
]
`;

exports[`ast gets test imports 1`] = `
[
  {
    "at": 0,
    "imports": [
      {
        "imported": "MeshVertex",
        "name": "MeshVertex",
      },
    ],
    "name": "use/types",
    "symbols": [
      "MeshVertex",
    ],
  },
  {
    "at": 0,
    "imports": [
      {
        "imported": "viewUniforms",
        "name": "view",
      },
      {
        "imported": "worldToClip",
        "name": "worldToClip",
      },
    ],
    "name": "use/view",
    "symbols": [
      "view",
      "worldToClip",
    ],
  },
  {
    "at": 0,
    "imports": [
      {
        "imported": "getQuadUV",
        "name": "getQuadUV",
      },
    ],
    "name": "geometry/quad",
    "symbols": [
      "getQuadUV",
    ],
  },
  {
    "at": 0,
    "imports": [],
    "name": "test",
    "symbols": [],
  },
]
`;

exports[`ast gets test struct declaration 1`] = `
[
  {
    "at": 0,
    "flags": 0,
    "struct": {
      "attr": undefined,
      "members": [
        {
          "attr": undefined,
          "name": "intensity",
          "type": "f32",
        },
        {
          "attr": [
            "annotate",
          ],
          "name": "position",
          "type": "vec3<f32>",
        },
      ],
      "name": "light",
    },
    "symbol": "light",
  },
]
`;

exports[`ast gets test var/const declarations 1`] = `
[
  {
    "at": 0,
    "flags": 0,
    "symbol": "x",
    "variable": {
      "attr": undefined,
      "identifiers": undefined,
      "name": "x",
      "qual": undefined,
      "type": "f32",
      "value": undefined,
    },
  },
  {
    "at": 18,
    "flags": 0,
    "symbol": "y",
    "variable": {
      "attr": undefined,
      "identifiers": undefined,
      "name": "y",
      "qual": undefined,
      "type": "f32",
      "value": undefined,
    },
  },
  {
    "at": 36,
    "constant": {
      "attr": undefined,
      "identifiers": undefined,
      "name": "a",
      "type": "i32",
      "value": "3",
    },
    "flags": 0,
    "symbol": "a",
  },
  {
    "alias": {
      "attr": undefined,
      "name": "integer",
      "type": "i32",
    },
    "at": 60,
    "flags": 0,
    "symbol": "integer",
  },
  {
    "at": 86,
    "constant": {
      "attr": undefined,
      "identifiers": undefined,
      "name": "b",
      "type": "i32",
      "value": undefined,
    },
    "flags": 0,
    "symbol": "b",
  },
]
`;

exports[`ast gets use types symbol table 1`] = `
{
  "bindings": undefined,
  "declarations": [
    {
      "at": 1,
      "flags": 1,
      "struct": {
        "attr": [
          "export",
        ],
        "members": [
          {
            "attr": undefined,
            "name": "position",
            "type": "vec4<f32>",
          },
          {
            "attr": undefined,
            "name": "color",
            "type": "vec4<f32>",
          },
          {
            "attr": undefined,
            "name": "uv",
            "type": "vec2<f32>",
          },
        ],
        "name": "SolidVertex",
      },
      "symbol": "SolidVertex",
    },
    {
      "at": 94,
      "flags": 1,
      "struct": {
        "attr": [
          "export",
        ],
        "members": [
          {
            "attr": undefined,
            "name": "position",
            "type": "vec4<f32>",
          },
          {
            "attr": undefined,
            "name": "normal",
            "type": "vec3<f32>",
          },
          {
            "attr": undefined,
            "name": "color",
            "type": "vec4<f32>",
          },
          {
            "attr": undefined,
            "name": "uv",
            "type": "vec2<f32>",
          },
        ],
        "name": "MeshVertex",
      },
      "symbol": "MeshVertex",
    },
  ],
  "enables": undefined,
  "exports": [
    {
      "at": 1,
      "flags": 1,
      "struct": {
        "attr": [
          "export",
        ],
        "members": [
          {
            "attr": undefined,
            "name": "position",
            "type": "vec4<f32>",
          },
          {
            "attr": undefined,
            "name": "color",
            "type": "vec4<f32>",
          },
          {
            "attr": undefined,
            "name": "uv",
            "type": "vec2<f32>",
          },
        ],
        "name": "SolidVertex",
      },
      "symbol": "SolidVertex",
    },
    {
      "at": 94,
      "flags": 1,
      "struct": {
        "attr": [
          "export",
        ],
        "members": [
          {
            "attr": undefined,
            "name": "position",
            "type": "vec4<f32>",
          },
          {
            "attr": undefined,
            "name": "normal",
            "type": "vec3<f32>",
          },
          {
            "attr": undefined,
            "name": "color",
            "type": "vec4<f32>",
          },
          {
            "attr": undefined,
            "name": "uv",
            "type": "vec2<f32>",
          },
        ],
        "name": "MeshVertex",
      },
      "symbol": "MeshVertex",
    },
  ],
  "externals": undefined,
  "globals": undefined,
  "linkable": undefined,
  "modules": undefined,
  "symbols": [
    "SolidVertex",
    "MeshVertex",
  ],
  "types": [
    "SolidVertex",
    "MeshVertex",
  ],
  "visibles": [
    "SolidVertex",
    "MeshVertex",
  ],
}
`;

exports[`ast gets use view declarations 1`] = `
[
  {
    "at": 0,
    "flags": 0,
    "struct": {
      "attr": undefined,
      "members": [
        {
          "attr": undefined,
          "name": "projectionMatrix",
          "type": "mat4x4<f32>",
        },
        {
          "attr": undefined,
          "name": "viewMatrix",
          "type": "mat4x4<f32>",
        },
        {
          "attr": undefined,
          "name": "viewPosition",
          "type": "vec4<f32>",
        },
        {
          "attr": undefined,
          "name": "viewResolution",
          "type": "vec2<f32>",
        },
        {
          "attr": undefined,
          "name": "viewSize",
          "type": "vec2<f32>",
        },
        {
          "attr": undefined,
          "name": "viewWorldDepth",
          "type": "f32",
        },
        {
          "attr": undefined,
          "name": "viewPixelRatio",
          "type": "f32",
        },
      ],
      "name": "ViewUniforms",
    },
    "symbol": "ViewUniforms",
  },
  {
    "at": 212,
    "flags": 33,
    "symbol": "viewUniforms",
    "variable": {
      "attr": [
        "export",
        "group(VIEW)",
        "binding(VIEW)",
      ],
      "identifiers": [
        "ViewUniforms",
      ],
      "name": "viewUniforms",
      "qual": "<uniform>",
      "type": "ViewUniforms",
      "value": undefined,
    },
  },
  {
    "at": 290,
    "flags": 1,
    "func": {
      "attr": [
        "export",
      ],
      "identifiers": [
        "viewUniforms",
      ],
      "inferred": undefined,
      "name": "worldToView",
      "parameters": [
        {
          "attr": undefined,
          "name": "position",
          "type": "vec4<f32>",
        },
      ],
      "type": "vec4<f32>",
    },
    "symbol": "worldToView",
  },
  {
    "at": 397,
    "flags": 1,
    "func": {
      "attr": [
        "export",
      ],
      "identifiers": [
        "viewUniforms",
      ],
      "inferred": undefined,
      "name": "viewToClip",
      "parameters": [
        {
          "attr": undefined,
          "name": "position",
          "type": "vec4<f32>",
        },
      ],
      "type": "vec4<f32>",
    },
    "symbol": "viewToClip",
  },
  {
    "at": 509,
    "flags": 1,
    "func": {
      "attr": [
        "export",
      ],
      "identifiers": [
        "viewToClip",
        "worldToView",
      ],
      "inferred": undefined,
      "name": "worldToClip",
      "parameters": [
        {
          "attr": undefined,
          "name": "position",
          "type": "vec4<f32>",
        },
      ],
      "type": "vec4<f32>",
    },
    "symbol": "worldToClip",
  },
  {
    "at": 615,
    "flags": 1,
    "func": {
      "attr": [
        "export",
      ],
      "identifiers": [
        "viewUniforms",
      ],
      "inferred": undefined,
      "name": "clipToScreen3D",
      "parameters": [
        {
          "attr": undefined,
          "name": "position",
          "type": "vec4<f32>",
        },
      ],
      "type": "vec3<f32>",
    },
    "symbol": "clipToScreen3D",
  },
  {
    "at": 749,
    "flags": 1,
    "func": {
      "attr": [
        "export",
      ],
      "identifiers": [
        "viewUniforms",
      ],
      "inferred": undefined,
      "name": "screenToClip3D",
      "parameters": [
        {
          "attr": undefined,
          "name": "position",
          "type": "vec4<f32>",
        },
      ],
      "type": "vec3<f32>",
    },
    "symbol": "screenToClip3D",
  },
  {
    "at": 889,
    "flags": 1,
    "func": {
      "attr": [
        "export",
      ],
      "identifiers": [
        "pos",
        "viewToClip",
        "worldToView",
      ],
      "inferred": undefined,
      "name": "worldToClip3D",
      "parameters": [
        {
          "attr": undefined,
          "name": "position",
          "type": "vec4<f32>",
        },
      ],
      "type": "vec3<f32>",
    },
    "symbol": "worldToClip3D",
  },
  {
    "at": 1026,
    "flags": 1,
    "func": {
      "attr": [
        "export",
      ],
      "identifiers": [
        "m",
        "viewUniforms",
        "worldScale",
        "clipScale",
        "mix",
        "pixelScale",
      ],
      "inferred": undefined,
      "name": "getPerspectiveScale",
      "parameters": [
        {
          "attr": undefined,
          "name": "w",
          "type": "f32",
        },
        {
          "attr": undefined,
          "name": "f",
          "type": "f32",
        },
      ],
      "type": "f32",
    },
    "symbol": "getPerspectiveScale",
  },
]
`;

exports[`ast gets use view symbol table 1`] = `
{
  "bindings": [
    {
      "at": 212,
      "flags": 33,
      "symbol": "viewUniforms",
      "variable": {
        "attr": [
          "export",
          "group(VIEW)",
          "binding(VIEW)",
        ],
        "identifiers": [
          "ViewUniforms",
        ],
        "name": "viewUniforms",
        "qual": "<uniform>",
        "type": "ViewUniforms",
        "value": undefined,
      },
    },
  ],
  "declarations": [
    {
      "at": 0,
      "flags": 0,
      "struct": {
        "attr": undefined,
        "members": [
          {
            "attr": undefined,
            "name": "projectionMatrix",
            "type": "mat4x4<f32>",
          },
          {
            "attr": undefined,
            "name": "viewMatrix",
            "type": "mat4x4<f32>",
          },
          {
            "attr": undefined,
            "name": "viewPosition",
            "type": "vec4<f32>",
          },
          {
            "attr": undefined,
            "name": "viewResolution",
            "type": "vec2<f32>",
          },
          {
            "attr": undefined,
            "name": "viewSize",
            "type": "vec2<f32>",
          },
          {
            "attr": undefined,
            "name": "viewWorldDepth",
            "type": "f32",
          },
          {
            "attr": undefined,
            "name": "viewPixelRatio",
            "type": "f32",
          },
        ],
        "name": "ViewUniforms",
      },
      "symbol": "ViewUniforms",
    },
    {
      "at": 212,
      "flags": 33,
      "symbol": "viewUniforms",
      "variable": {
        "attr": [
          "export",
          "group(VIEW)",
          "binding(VIEW)",
        ],
        "identifiers": [
          "ViewUniforms",
        ],
        "name": "viewUniforms",
        "qual": "<uniform>",
        "type": "ViewUniforms",
        "value": undefined,
      },
    },
    {
      "at": 290,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "viewUniforms",
        ],
        "inferred": undefined,
        "name": "worldToView",
        "parameters": [
          {
            "attr": undefined,
            "name": "position",
            "type": "vec4<f32>",
          },
        ],
        "type": "vec4<f32>",
      },
      "symbol": "worldToView",
    },
    {
      "at": 397,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "viewUniforms",
        ],
        "inferred": undefined,
        "name": "viewToClip",
        "parameters": [
          {
            "attr": undefined,
            "name": "position",
            "type": "vec4<f32>",
          },
        ],
        "type": "vec4<f32>",
      },
      "symbol": "viewToClip",
    },
    {
      "at": 509,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "viewToClip",
          "worldToView",
        ],
        "inferred": undefined,
        "name": "worldToClip",
        "parameters": [
          {
            "attr": undefined,
            "name": "position",
            "type": "vec4<f32>",
          },
        ],
        "type": "vec4<f32>",
      },
      "symbol": "worldToClip",
    },
    {
      "at": 615,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "viewUniforms",
        ],
        "inferred": undefined,
        "name": "clipToScreen3D",
        "parameters": [
          {
            "attr": undefined,
            "name": "position",
            "type": "vec4<f32>",
          },
        ],
        "type": "vec3<f32>",
      },
      "symbol": "clipToScreen3D",
    },
    {
      "at": 749,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "viewUniforms",
        ],
        "inferred": undefined,
        "name": "screenToClip3D",
        "parameters": [
          {
            "attr": undefined,
            "name": "position",
            "type": "vec4<f32>",
          },
        ],
        "type": "vec3<f32>",
      },
      "symbol": "screenToClip3D",
    },
    {
      "at": 889,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "viewToClip",
          "worldToView",
        ],
        "inferred": undefined,
        "name": "worldToClip3D",
        "parameters": [
          {
            "attr": undefined,
            "name": "position",
            "type": "vec4<f32>",
          },
        ],
        "type": "vec3<f32>",
      },
      "symbol": "worldToClip3D",
    },
    {
      "at": 1026,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "viewUniforms",
        ],
        "inferred": undefined,
        "name": "getPerspectiveScale",
        "parameters": [
          {
            "attr": undefined,
            "name": "w",
            "type": "f32",
          },
          {
            "attr": undefined,
            "name": "f",
            "type": "f32",
          },
        ],
        "type": "f32",
      },
      "symbol": "getPerspectiveScale",
    },
  ],
  "enables": undefined,
  "exports": [
    {
      "at": 212,
      "flags": 33,
      "symbol": "viewUniforms",
      "variable": {
        "attr": [
          "export",
          "group(VIEW)",
          "binding(VIEW)",
        ],
        "identifiers": [
          "ViewUniforms",
        ],
        "name": "viewUniforms",
        "qual": "<uniform>",
        "type": "ViewUniforms",
        "value": undefined,
      },
    },
    {
      "at": 290,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "viewUniforms",
        ],
        "inferred": undefined,
        "name": "worldToView",
        "parameters": [
          {
            "attr": undefined,
            "name": "position",
            "type": "vec4<f32>",
          },
        ],
        "type": "vec4<f32>",
      },
      "symbol": "worldToView",
    },
    {
      "at": 397,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "viewUniforms",
        ],
        "inferred": undefined,
        "name": "viewToClip",
        "parameters": [
          {
            "attr": undefined,
            "name": "position",
            "type": "vec4<f32>",
          },
        ],
        "type": "vec4<f32>",
      },
      "symbol": "viewToClip",
    },
    {
      "at": 509,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "viewToClip",
          "worldToView",
        ],
        "inferred": undefined,
        "name": "worldToClip",
        "parameters": [
          {
            "attr": undefined,
            "name": "position",
            "type": "vec4<f32>",
          },
        ],
        "type": "vec4<f32>",
      },
      "symbol": "worldToClip",
    },
    {
      "at": 615,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "viewUniforms",
        ],
        "inferred": undefined,
        "name": "clipToScreen3D",
        "parameters": [
          {
            "attr": undefined,
            "name": "position",
            "type": "vec4<f32>",
          },
        ],
        "type": "vec3<f32>",
      },
      "symbol": "clipToScreen3D",
    },
    {
      "at": 749,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "viewUniforms",
        ],
        "inferred": undefined,
        "name": "screenToClip3D",
        "parameters": [
          {
            "attr": undefined,
            "name": "position",
            "type": "vec4<f32>",
          },
        ],
        "type": "vec3<f32>",
      },
      "symbol": "screenToClip3D",
    },
    {
      "at": 889,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "viewToClip",
          "worldToView",
        ],
        "inferred": undefined,
        "name": "worldToClip3D",
        "parameters": [
          {
            "attr": undefined,
            "name": "position",
            "type": "vec4<f32>",
          },
        ],
        "type": "vec3<f32>",
      },
      "symbol": "worldToClip3D",
    },
    {
      "at": 1026,
      "flags": 1,
      "func": {
        "attr": [
          "export",
        ],
        "identifiers": [
          "viewUniforms",
        ],
        "inferred": undefined,
        "name": "getPerspectiveScale",
        "parameters": [
          {
            "attr": undefined,
            "name": "w",
            "type": "f32",
          },
          {
            "attr": undefined,
            "name": "f",
            "type": "f32",
          },
        ],
        "type": "f32",
      },
      "symbol": "getPerspectiveScale",
    },
  ],
  "externals": undefined,
  "globals": undefined,
  "linkable": undefined,
  "modules": undefined,
  "symbols": [
    "ViewUniforms",
    "viewUniforms",
    "worldToView",
    "viewToClip",
    "worldToClip",
    "clipToScreen3D",
    "screenToClip3D",
    "worldToClip3D",
    "getPerspectiveScale",
  ],
  "types": undefined,
  "visibles": [
    "viewUniforms",
    "worldToView",
    "viewToClip",
    "worldToClip",
    "clipToScreen3D",
    "screenToClip3D",
    "worldToClip3D",
    "getPerspectiveScale",
  ],
}
`;

exports[`ast parses around comment lines with @attributes 1`] = `
"
//@optional @link fn toColorSpace(c: vec4<f32>) -> vec4<f32> { return c; }

struct VertexT {
  @builtin(position) position: vec4<f32>,
  @location(0) @interpolate(flat) lightIndex: u32,
};
    "
`;

exports[`ast parses comment function 1`] = `
[
  {
    "at": 0,
    "flags": 0,
    "func": {
      "attr": undefined,
      "identifiers": [
        "nextEdge",
        "atomicAdd",
        "indirectDraw",
        "activeEdges",
      ],
      "inferred": undefined,
      "name": "appendEdge",
      "parameters": [
        {
          "attr": undefined,
          "name": "id",
          "type": "u32",
        },
      ],
      "type": "void",
    },
    "symbol": "appendEdge",
  },
]
`;

exports[`ast rewrites a lot of code using the compressed AST 1`] = `
[
  [
    1,
    1,
    31,
  ],
  [
    1,
    33,
    47,
  ],
  [
    1,
    16,
    68,
  ],
  [
    0,
    53,
    231,
  ],
  [
    2,
    9,
    21,
  ],
  [
    3,
    17,
    25,
  ],
  [
    3,
    32,
    44,
  ],
  [
    3,
    37,
    49,
  ],
  [
    3,
    34,
    46,
  ],
  [
    3,
    13,
    31,
  ],
  [
    0,
    39,
    317,
  ],
  [
    3,
    0,
    7,
  ],
  [
    2,
    11,
    15,
  ],
  [
    3,
    8,
    30,
  ],
  [
    3,
    43,
    67,
  ],
  [
    2,
    50,
    62,
  ],
  [
    2,
    18,
    29,
  ],
  [
    2,
    16,
    25,
  ],
  [
    2,
    49,
    61,
  ],
]
`;

exports[`ast rewrites a lot of code using the compressed AST 2`] = `
{
  "__nodes": [
    [
      1,
      1,
      31,
    ],
    [
      1,
      33,
      47,
    ],
    [
      1,
      16,
      68,
    ],
    [
      0,
      53,
      231,
    ],
    [
      2,
      9,
      21,
    ],
    [
      3,
      17,
      25,
    ],
    [
      3,
      32,
      44,
    ],
    [
      3,
      37,
      49,
    ],
    [
      3,
      34,
      46,
    ],
    [
      3,
      13,
      31,
    ],
    [
      0,
      39,
      317,
    ],
    [
      3,
      0,
      7,
    ],
    [
      2,
      11,
      15,
    ],
    [
      3,
      8,
      30,
    ],
    [
      3,
      43,
      67,
    ],
    [
      2,
      50,
      62,
    ],
    [
      2,
      18,
      29,
    ],
    [
      2,
      16,
      25,
    ],
    [
      2,
      49,
      61,
    ],
  ],
  "cursor": [Function],
}
`;

exports[`ast rewrites a lot of code using the compressed AST 3`] = `
"
struct VertexOutput {
  @builtin position: vec4<f32>,
  @location(0) fragColor: vec4<f32>,
  @location(1) fragUV: vec2<f32>,
  @location(2) @interpolate(flat) fragIndex: u32,
};

@vertex
fn entryPoint(
  @builtin(vertex_index) vertexIndex: i32,
  @builtin(instance_index) instanceIndex: i32,
) -> VertexOutput {

  SolidVertex v = _zz_getVertex(vertexIndex, instanceIndex);

  return VertexOutput(
    v.position,
    v.color,
    v.uv,
    u32(instanceIndex),
  );
}
    "
`;

exports[`ast rewrites code using the AST 1`] = `
"
    fn _zz_getValue(index: i32) -> f32;
    fn entryPoint() -> vec3<f32> {
      let x = 3.0;
      let y = _zz_getValue(2);
      let v: vec3<f32> = vec3<f32>(x, y, 0.0);
      return v.xyz;
    }
    "
`;

exports[`ast rewrites code using the compressed AST 1`] = `
[
  [
    0,
    0,
    35,
  ],
  [
    2,
    8,
    16,
  ],
  [
    0,
    28,
    176,
  ],
  [
    2,
    8,
    12,
  ],
  [
    2,
    55,
    63,
  ],
]
`;

exports[`ast rewrites code using the compressed AST 2`] = `
{
  "__nodes": [
    [
      0,
      0,
      35,
    ],
    [
      2,
      8,
      16,
    ],
    [
      0,
      28,
      176,
    ],
    [
      2,
      8,
      12,
    ],
    [
      2,
      55,
      63,
    ],
  ],
  "cursor": [Function],
}
`;

exports[`ast rewrites code with inferred types using the AST 1`] = `
"
    fn entryPoint() -> vec3<f32> {
      let x = 3.0;
      let y = _zz_getValue(2);
      let v: vec3<f32> = vec3<f32>(x, y, 0.0);
      return v.xyz;
    }
    "
`;

exports[`ast shakes simple program 1`] = `
[
  [
    0,
    [
      0,
      1,
      2,
    ],
  ],
  [
    22,
    [
      1,
    ],
  ],
  [
    64,
    [
      2,
    ],
  ],
]
`;

exports[`ast shakes simple program 2`] = `
"
const x: f32 = 1.0;

fn getA() -> f32 {
  return x;
}

"
`;

exports[`ast shakes struct type args 1`] = `
[
  [
    0,
    [
      0,
      1,
    ],
  ],
  [
    79,
    [
      1,
    ],
  ],
]
`;

exports[`ast shakes struct type args 2`] = `
"
struct VertexOutput {
  @builtin(position) position: vec4f,
  color: vec4f,
}
@fragment fn main(arg: VertexOutput) -> @location(0) vec4f { return arg.color; }
    "
`;

exports[`ast shakes use/view AST 1`] = `
[
  [
    0,
    [
      0,
      1,
      2,
      4,
      7,
      3,
      5,
      6,
      8,
    ],
  ],
  [
    212,
    [
      1,
      2,
      4,
      7,
      3,
      5,
      6,
      8,
    ],
  ],
  [
    290,
    [
      2,
      4,
      7,
    ],
  ],
  [
    397,
    [
      3,
      4,
      7,
    ],
  ],
  [
    509,
    [
      4,
    ],
  ],
  [
    615,
    [
      5,
    ],
  ],
  [
    749,
    [
      6,
    ],
  ],
  [
    889,
    [
      7,
    ],
  ],
  [
    1026,
    [
      8,
    ],
  ],
]
`;

exports[`ast shakes use/view AST 2`] = `
"
struct ViewUniforms {
  projectionMatrix: mat4x4<f32>,
  viewMatrix: mat4x4<f32>,
  viewPosition: vec4<f32>,
  viewResolution: vec2<f32>,
  viewSize: vec2<f32>,
  viewWorldDepth: f32,
  viewPixelRatio: f32,
};

@group(VIEW) @binding(VIEW) var<uniform> viewUniforms: ViewUniforms;

fn worldToView(position: vec4<f32>) -> vec4<f32> {
  return viewUniforms.viewMatrix * position;
}

fn viewToClip(position: vec4<f32>) -> vec4<f32> {
  return viewUniforms.projectionMatrix * position;
}

fn worldToClip(position: vec4<f32>) -> vec4<f32> {
  return viewToClip(worldToView(position));
}

"
`;

exports[`ast shakes use/view AST using compressed AST 1`] = `
[
  [
    0,
    [
      0,
      1,
      2,
      4,
      7,
      3,
      5,
      6,
      8,
    ],
  ],
  [
    212,
    [
      1,
      2,
      4,
      7,
      3,
      5,
      6,
      8,
    ],
  ],
  [
    290,
    [
      2,
      4,
      7,
    ],
  ],
  [
    397,
    [
      3,
      4,
      7,
    ],
  ],
  [
    509,
    [
      4,
    ],
  ],
  [
    615,
    [
      5,
    ],
  ],
  [
    749,
    [
      6,
    ],
  ],
  [
    889,
    [
      7,
    ],
  ],
  [
    1026,
    [
      8,
    ],
  ],
]
`;
